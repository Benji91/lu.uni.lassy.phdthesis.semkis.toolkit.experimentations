/*
 * generated by Xtext 2.22.0
 */
package lu.uni.lassy.phd.dsl.semkis.validation;

import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.naming.IQualifiedNameProvider;
import org.eclipse.xtext.naming.QualifiedName;
import org.eclipse.xtext.resource.IEObjectDescription;


import lu.uni.lassy.phd.dsl.semkis.semkis.ctEquivalenceClass;

import lu.uni.lassy.phd.dsl.semkis.semkis.ctDataset;


import lu.uni.lassy.phd.dsl.semkis.semkis.SemkisPackage;
import lu.uni.lassy.phd.dsl.semkis.utils.SemkisIndex;

import com.google.inject.Inject;

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 * @param <T>
 */
public class SemkisValidator extends AbstractSemkisValidator {
	
	
	@Inject
	SemkisIndex semkisIndex;
	
	@Inject
	IQualifiedNameProvider iqNameProvider;
	
	/** Global Variables */
	public static final String INVALID_NAME = "invalidName";
	public static final String NOT_DEFINED = "notDefined";
	public static final String DUPLICATES_FOUND = "duplicatedFound";
	
	/**
	 * Auxiliary function to count the multiple resources
	 * @param qn
	 * @param ieoDescriptions
	 * @return
	 */
	public int computeDuplicates(QualifiedName qn, Iterable<IEObjectDescription> ieoDescriptions){
		int duplicates = 0;
		for(IEObjectDescription ieoDescription :ieoDescriptions){
			if(ieoDescription.getQualifiedName().equals(qn)){
				duplicates++;			
			}
    	} 
		return duplicates;
	}

	
	/**
	 * Uniqueness of EquivalenceClasses
	 */
	@Check
	public void checkIfEquivalenceClassesAreUnique(ctEquivalenceClass p){
		int duplicates = computeDuplicates(iqNameProvider.getFullyQualifiedName(p), semkisIndex.getVisibleEquivalenceClassDescriptions(p));
		if (duplicates >1) {
			error("Equivalence Class name already assigned within the project's scope",
				SemkisPackage.eINSTANCE.getctEquivalenceClass_Name());
			return;
		} 	
	}
	
	/**
	 * Uniqueness of Datasets
	 */
	@Check
	public void checkIfDatasetsAreUnique(ctDataset p){
		int duplicates = computeDuplicates(iqNameProvider.getFullyQualifiedName(p), semkisIndex.getVisibleDatasetsDescriptions(p));
		if (duplicates >1) {
			error("Dataset name already assigned within the project's scope",
				SemkisPackage.eINSTANCE.getctDataset_Name());
			return;
		}	
	}
	


}
